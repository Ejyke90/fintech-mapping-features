"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[8801],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var r=i(96540);const s={},t=r.createContext(s);function a(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(t.Provider,{value:n},e.children)}},61553:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"csv-parser/overview","title":"CSV Parser Overview","description":"The CSV Parser is a Python-based microservice that provides robust parsing, validation, and transformation capabilities for CSV files in financial data processing workflows.","source":"@site/docs/csv-parser/overview.md","sourceDirName":"csv-parser","slug":"/csv-parser/overview","permalink":"/fintech-mapping-features/intelligentmappingpoc/docs/csv-parser/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/Ejyke90/fintech-mapping-features/tree/main/docs/docs/csv-parser/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var s=i(74848),t=i(28453);const a={sidebar_position:1},l="CSV Parser Overview",c={},o=[{value:"Features",id:"features",level:2},{value:"\ud83d\udd0d Auto-Detection",id:"-auto-detection",level:3},{value:"\u2705 Validation",id:"-validation",level:3},{value:"\ud83d\udd04 Transformation",id:"-transformation",level:3},{value:"\ud83d\udcca Schema Extraction",id:"-schema-extraction",level:3},{value:"Architecture",id:"architecture",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Installation",id:"installation",level:3},{value:"Running the Service",id:"running-the-service",level:3},{value:"Using Docker",id:"using-docker",level:3},{value:"API Documentation",id:"api-documentation",level:2},{value:"Integration",id:"integration",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"csv-parser-overview",children:"CSV Parser Overview"})}),"\n",(0,s.jsx)(n.p,{children:"The CSV Parser is a Python-based microservice that provides robust parsing, validation, and transformation capabilities for CSV files in financial data processing workflows."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsx)(n.h3,{id:"-auto-detection",children:"\ud83d\udd0d Auto-Detection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatic encoding detection (UTF-8, ISO-8859-1, etc.)"}),"\n",(0,s.jsx)(n.li,{children:"Delimiter detection (comma, semicolon, tab, pipe)"}),"\n",(0,s.jsx)(n.li,{children:"Smart handling of various CSV formats"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-validation",children:"\u2705 Validation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Structure validation"}),"\n",(0,s.jsx)(n.li,{children:"Data type detection"}),"\n",(0,s.jsx)(n.li,{children:"Missing value analysis"}),"\n",(0,s.jsx)(n.li,{children:"Duplicate detection"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-transformation",children:"\ud83d\udd04 Transformation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"CSV to JSON conversion"}),"\n",(0,s.jsx)(n.li,{children:"Data cleansing and normalization"}),"\n",(0,s.jsx)(n.li,{children:"Column name standardization"}),"\n",(0,s.jsx)(n.li,{children:"Whitespace trimming"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"-schema-extraction",children:"\ud83d\udcca Schema Extraction"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Column metadata extraction"}),"\n",(0,s.jsx)(n.li,{children:"Data type inference"}),"\n",(0,s.jsx)(n.li,{children:"Statistical analysis for numeric columns"}),"\n",(0,s.jsx)(n.li,{children:"Sample value preview"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsx)(n.p,{children:"The CSV Parser is built with:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"FastAPI"})," - Modern, high-performance web framework"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pandas"})," - Powerful data manipulation library"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Pydantic"})," - Data validation using Python type annotations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Uvicorn"})," - Lightning-fast ASGI server"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"csv-parser/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 main.py          # FastAPI application\n\u2502   \u2514\u2500\u2500 parser.py        # Core CSV parsing logic\n\u251c\u2500\u2500 tests/\n\u2502   \u2514\u2500\u2500 test_parser.py   # Unit tests\n\u251c\u2500\u2500 Dockerfile           # Container configuration\n\u251c\u2500\u2500 requirements.txt     # Python dependencies\n\u2514\u2500\u2500 README.md           # Documentation\n"})}),"\n",(0,s.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,s.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd csv-parser\n\n# Create virtual environment\npython3 -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n"})}),"\n",(0,s.jsx)(n.h3,{id:"running-the-service",children:"Running the Service"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start the server\npython src/main.py\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The service will be available at ",(0,s.jsx)(n.code,{children:"http://localhost:8000"})]}),"\n",(0,s.jsx)(n.h3,{id:"using-docker",children:"Using Docker"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Build the image\ndocker build -t csv-parser:latest .\n\n# Run the container\ndocker run -p 8000:8000 csv-parser:latest\n"})}),"\n",(0,s.jsx)(n.h2,{id:"api-documentation",children:"API Documentation"}),"\n",(0,s.jsx)(n.p,{children:"Once the service is running, visit:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Swagger UI: ",(0,s.jsx)(n.code,{children:"http://localhost:8000/docs"})]}),"\n",(0,s.jsxs)(n.li,{children:["ReDoc: ",(0,s.jsx)(n.code,{children:"http://localhost:8000/redoc"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"integration",children:"Integration"}),"\n",(0,s.jsx)(n.p,{children:"The CSV Parser integrates seamlessly with other modules:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"XML Sanitizer"}),": Convert CSV data to ISO 20022 XML format"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Intelligent Mapping Generator"}),": Use CSV as source data for field mapping"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Configure via environment variables or ",(0,s.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"CSV_MAX_FILE_SIZE=10485760  # 10MB\nCSV_UPLOAD_DIR=./uploads\nCSV_ALLOWED_EXTENSIONS=.csv,.txt,.tsv\nAPI_HOST=0.0.0.0\nAPI_PORT=8000\n"})}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/fintech-mapping-features/intelligentmappingpoc/docs/csv-parser/api-reference",children:"API Reference"})," - Detailed API documentation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/fintech-mapping-features/intelligentmappingpoc/docs/csv-parser/examples",children:"Examples"})," - Usage examples and code snippets"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/fintech-mapping-features/intelligentmappingpoc/docs/csv-parser/integration",children:"Integration Guide"})," - Connecting with other services"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);